{"version":3,"sources":["webpack:///./src/app/consultants/consultants.component.css","webpack:///./src/app/consultants/consultants.component.html","webpack:///./src/app/consultants/consultants.component.ts","webpack:///./src/app/core/farm.ts","webpack:///./src/app/core/income.ts","webpack:///./src/app/core/outcome.ts","webpack:///./src/app/core/production.ts","webpack:///./src/app/edit-farm/edit-farm.component.css","webpack:///./src/app/edit-farm/edit-farm.component.html","webpack:///./src/app/edit-farm/edit-farm.component.ts","webpack:///./src/app/edit-income/edit-income.component.css","webpack:///./src/app/edit-income/edit-income.component.html","webpack:///./src/app/edit-income/edit-income.component.ts","webpack:///./src/app/edit-outcome/edit-outcome.component.css","webpack:///./src/app/edit-outcome/edit-outcome.component.html","webpack:///./src/app/edit-outcome/edit-outcome.component.ts","webpack:///./src/app/edit-production/edit-production.component.css","webpack:///./src/app/edit-production/edit-production.component.html","webpack:///./src/app/edit-production/edit-production.component.ts","webpack:///./src/app/farmer-dashboard/farmer-dashboard.component.css","webpack:///./src/app/farmer-dashboard/farmer-dashboard.component.html","webpack:///./src/app/farmer-dashboard/farmer-dashboard.component.ts","webpack:///./src/app/farms/farms.component.css","webpack:///./src/app/farms/farms.component.html","webpack:///./src/app/farms/farms.component.ts","webpack:///./src/app/incomes/incomes.component.css","webpack:///./src/app/incomes/incomes.component.html","webpack:///./src/app/incomes/incomes.component.ts","webpack:///./src/app/layouts/farmer-layout/farmer-layout.module.ts","webpack:///./src/app/layouts/farmer-layout/farmer-layout.routing.ts","webpack:///./src/app/new-farm/new-farm.component.css","webpack:///./src/app/new-farm/new-farm.component.html","webpack:///./src/app/new-farm/new-farm.component.ts","webpack:///./src/app/new-income/new-income.component.css","webpack:///./src/app/new-income/new-income.component.html","webpack:///./src/app/new-income/new-income.component.ts","webpack:///./src/app/new-outcome/new-outcome.component.css","webpack:///./src/app/new-outcome/new-outcome.component.html","webpack:///./src/app/new-outcome/new-outcome.component.ts","webpack:///./src/app/new-production/new-production.component.css","webpack:///./src/app/new-production/new-production.component.html","webpack:///./src/app/new-production/new-production.component.ts","webpack:///./src/app/outcomes/outcomes.component.css","webpack:///./src/app/outcomes/outcomes.component.html","webpack:///./src/app/outcomes/outcomes.component.ts","webpack:///./src/app/production/production.component.css","webpack:///./src/app/production/production.component.html","webpack:///./src/app/production/production.component.ts","webpack:///./src/app/tip/tip.component.css","webpack:///./src/app/tip/tip.component.html","webpack:///./src/app/tip/tip.component.ts","webpack:///./src/app/tips/tips.component.css","webpack:///./src/app/tips/tips.component.html","webpack:///./src/app/tips/tips.component.ts"],"names":[],"mappings":"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","file":"layouts-farmer-layout-farmer-layout-module.js","sourcesContent":["module.exports = \".content{\\r\\n    white-space: nowrap;\\r\\n    width: 40rem;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    margin-top: 1rem !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29uc3VsdGFudHMvY29uc3VsdGFudHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFvQjtJQUNwQixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLHdCQUF3QjtJQUN4Qiw0QkFBNEI7Q0FDL0IiLCJmaWxlIjoic3JjL2FwcC9jb25zdWx0YW50cy9jb25zdWx0YW50cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnR7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgd2lkdGg6IDQwcmVtO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgbWFyZ2luLXRvcDogMXJlbSAhaW1wb3J0YW50O1xyXG59Il19 */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\"> Consultants</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"table-responsive-sm\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"text-primary\\\">\\n                <tr>\\n                  <th *ngFor=\\\"let cell of tableData.headerRow\\\">{{cell}}</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let row of consultantsList; let i = index;\\\">\\n                  <td>{{i + 1}}</td>\\n                  <td>{{row.firstName}} {{row.lastName}}</td>\\n                  <td><a href=\\\"mailto: {{row.email}}\\\">{{row.email}}</a></td>\\n                  <td>{{row.city}}</td>\\n                  <td>{{row.region}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { User } from '../core/user';\n\ndeclare interface TableData {\n  headerRow: string[];\n}\n\n@Component({\n  selector: 'app-consultants',\n  templateUrl: './consultants.component.html',\n  styleUrls: ['./consultants.component.css']\n})\nexport class ConsultantsComponent implements OnInit {\n\n  public tableData: TableData;\n  public consultantsList: User[];\n  private usersList: AngularFireList<any>;\n\n  constructor(\n    private afDb: AngularFireDatabase\n  ) { }\n\n  ngOnInit() {\n    this.tableData = {\n      headerRow: ['ID', 'Name', 'Email', 'City', 'Region']\n    };\n    this.usersList = this.afDb.list('users', ref => ref.orderByChild('role').equalTo('consultant'));\n    this.usersList.snapshotChanges().subscribe(item => {\n      this.consultantsList = [];\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['uid'] = element.key;\n        this.consultantsList.push(y as User);\n      });\n    });\n  }\n}\n","export class Farm {\r\n    fid: string;\r\n    farmerid: string;\r\n    title: string;\r\n    region: string;\r\n    longitude: number;\r\n    latitude: number;\r\n    size: number;\r\n    soil: string;\r\n    description: string;\r\n    registrationDate: Date;\r\n}\r\n","export class Income {\r\n    iid: string;\r\n    farmerid: string;\r\n    title: string;\r\n    ammount: number;\r\n    description: string;\r\n    registrationDate: Date;\r\n}\r\n","export class Outcome {\r\n    oid: string;\r\n    farmerid: string;\r\n    title: string;\r\n    ammount: number;\r\n    description: string;\r\n    registrationDate: Date;\r\n}\r\n","export class Production {\r\n    pid: string;\r\n    farmerid: string;\r\n    farmid: string;\r\n    title: string;\r\n    units: number;\r\n    ammountWeight: number;\r\n    description: string;\r\n    registrationDate: Date;\r\n}\r\n","module.exports = \".map-panel{\\r\\n    padding: 0px;\\r\\n}\\r\\n.map{\\r\\n    height: 25rem;\\r\\n    border-radius: 0rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1mYXJtL2VkaXQtZmFybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtDQUNoQjtBQUNEO0lBQ0ksY0FBYztJQUNkLG9CQUFvQjtDQUN2QiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtZmFybS9lZGl0LWZhcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXAtcGFuZWx7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbn1cclxuLm1hcHtcclxuICAgIGhlaWdodDogMjVyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAwcmVtO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\">Edit Farm</h5>\\n        </div>\\n        <div class=\\\"map-panel\\\">\\n          <div id=\\\"map\\\" class=\\\"map\\\"></div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #editFarmForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(editFarmForm)\\\">\\n            <input type=\\\"hidden\\\" name=\\\"fid\\\" #fid=\\\"ngModel\\\" [(ngModel)]=\\\"farmID\\\">\\n            <input type=\\\"hidden\\\" name=\\\"farmerid\\\" #farmerid=\\\"ngModel\\\" [(ngModel)]=\\\"editedFarm.farmerid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" [(ngModel)]=\\\"editedFarm.title\\\"\\n                    placeholder=\\\"Title\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Region</label>\\n                  <select class=\\\"form-control\\\" name=\\\"region\\\" #region=\\\"ngModel\\\" [(ngModel)]=\\\"editedFarm.region\\\" required>\\n                    <option disabled selected value=\\\"\\\">Select region</option>\\n                    <option *ngFor=\\\"let regionName of regionsList;\\\" [value]=\\\"regionName\\\">{{regionName}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Date</label>\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"registrationDate\\\" #registrationDate=\\\"ngModel\\\" [ngModel]=\\\"editedFarm.registrationDate | date:'yyyy-MM-dd'\\\"\\n                    placeholder=\\\"Date\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Longitude</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"longitude\\\" #longitude=\\\"ngModel\\\" [(ngModel)]=\\\"editedFarm.longitude\\\"\\n                    placeholder=\\\"Longitude\\\" readonly required>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Latitude</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"latitude\\\" #latitude=\\\"ngModel\\\" [(ngModel)]=\\\"editedFarm.latitude\\\"\\n                    placeholder=\\\"Latitude\\\" readonly required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Size in m<sup>2</sup></label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"size\\\" #size=\\\"ngModel\\\" [(ngModel)]=\\\"editedFarm.size\\\"\\n                    placeholder=\\\"Size\\\" required>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Soil</label>\\n                  <select class=\\\"form-control\\\" name=\\\"soil\\\" #soil=\\\"ngModel\\\" [(ngModel)]=\\\"editedFarm.soil\\\" required>\\n                    <option disabled value=\\\"\\\">Select soil type</option>\\n                    <option *ngFor=\\\"let soilTypes of soilTypesList;\\\" [value]=\\\"soilTypes\\\">{{soilTypes}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Description</label>\\n                  <textarea rows=\\\"4\\\" cols=\\\"80\\\" class=\\\"form-control\\\" name=\\\"description\\\" #description=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"editedFarm.description\\\" placeholder=\\\"Give a description about the farm\\\" required></textarea>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-md-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!editFarmForm.valid\\\">Update</button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ContentService } from '../core/content.service';\nimport { Farm } from '../core/farm';\n\ndeclare var google: any;\n\n@Component({\n  selector: 'app-edit-farm',\n  templateUrl: './edit-farm.component.html',\n  styleUrls: ['./edit-farm.component.css']\n})\nexport class EditFarmComponent implements OnInit {\n\n  public regionsList = ['Heraklion Crete', 'Chania Crete', 'Rehtimnon Crete', 'Lasithi Crete'];\n  public soilTypesList = ['Loam', 'Clay', 'Sand', 'Silt', 'Peat', 'Chalk'];\n  public editedFarm: Farm = new Farm();\n  public farmID: string;\n  private farmReference: AngularFireObject<any>;\n  private subscription: any;\n\n  ngOnInit() { }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private afDb: AngularFireDatabase,\n    private contentService: ContentService\n  ) {\n    this.getFarm();\n  }\n\n  getFarm(): void {\n    this.farmID = this.route.snapshot.paramMap.get('key');\n    this.farmReference = this.afDb.object('farms/' + this.farmID);\n    this.subscription = this.farmReference.snapshotChanges().subscribe(action => {\n      this.editedFarm = action.payload.val() as Farm;\n      this.initMap(new google.maps.LatLng(this.editedFarm.latitude, this.editedFarm.longitude));\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.fid !== null) {\n      this.contentService.updateFarm(form.value);\n    }\n    this.subscription.unsubscribe();\n    this.router.navigate(['/farms']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/farms']);\n  }\n\n  initMap(coordinates) {\n    const map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 8,\n      center: coordinates,\n      scrollwheel: false,\n      mapTypeControl: false,\n      streetViewControl: false\n    });\n    const marker = new google.maps.Marker({ position: coordinates });\n    marker.setMap(map);\n\n    map.addListener('click', (event) => {\n      marker.setPosition(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));\n      map.panTo(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));\n      this.editedFarm.latitude = event.latLng.lat();\n      this.editedFarm.longitude = event.latLng.lng();\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtaW5jb21lL2VkaXQtaW5jb21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\">Edit Income</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #editIncomeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(editIncomeForm)\\\">\\n            <input type=\\\"hidden\\\" name=\\\"iid\\\" #iid=\\\"ngModel\\\" [(ngModel)]=\\\"incomeID\\\">\\n            <input type=\\\"hidden\\\" name=\\\"farmerid\\\" #farmerid=\\\"ngModel\\\" [(ngModel)]=\\\"editedIncome.farmerid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" [(ngModel)]=\\\"editedIncome.title\\\"\\n                    placeholder=\\\"Title\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Date</label>\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"registrationDate\\\" #registrationDate=\\\"ngModel\\\" [ngModel]=\\\"editedIncome.registrationDate | date:'yyyy-MM-dd'\\\"\\n                    placeholder=\\\"Date\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Ammount</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"ammount\\\" #ammount=\\\"ngModel\\\" [(ngModel)]=\\\"editedIncome.ammount\\\"\\n                    placeholder=\\\"Ammount in €\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Description</label>\\n                  <textarea rows=\\\"4\\\" cols=\\\"80\\\" class=\\\"form-control\\\" name=\\\"description\\\" #description=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"editedIncome.description\\\" placeholder=\\\"Give a description about the income\\\" required></textarea>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-md-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!editIncomeForm.valid\\\">Update</button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ContentService } from '../core/content.service';\nimport { Income } from '../core/income';\n\n@Component({\n  selector: 'app-edit-income',\n  templateUrl: './edit-income.component.html',\n  styleUrls: ['./edit-income.component.css']\n})\nexport class EditIncomeComponent implements OnInit {\n\n  public editedIncome: Income = new Income();\n  public incomeID: string;\n  private incomeReference: AngularFireObject<any>;\n\n  ngOnInit() { }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private afDb: AngularFireDatabase,\n    private contentService: ContentService\n  ) {\n    this.getIncome();\n  }\n\n  getIncome(): void {\n    this.incomeID = this.route.snapshot.paramMap.get('key');\n    this.incomeReference = this.afDb.object('incomes/' + this.incomeID);\n    this.incomeReference.snapshotChanges().subscribe(action => {\n      this.editedIncome = action.payload.val() as Income;\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.iid !== null) {\n      this.contentService.updateIncome(form.value);\n    }\n    this.router.navigate(['/incomes']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/incomes']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtb3V0Y29tZS9lZGl0LW91dGNvbWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\">Edit Outcome</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #editOutcomeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(editOutcomeForm)\\\">\\n            <input type=\\\"hidden\\\" name=\\\"oid\\\" #oid=\\\"ngModel\\\" [(ngModel)]=\\\"outcomeID\\\">\\n            <input type=\\\"hidden\\\" name=\\\"farmerid\\\" #farmerid=\\\"ngModel\\\" [(ngModel)]=\\\"editedOutcome.farmerid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" [(ngModel)]=\\\"editedOutcome.title\\\"\\n                    placeholder=\\\"Title\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Date</label>\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"registrationDate\\\" #registrationDate=\\\"ngModel\\\" [ngModel]=\\\"editedOutcome.registrationDate | date:'yyyy-MM-dd'\\\"\\n                    placeholder=\\\"Date\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Ammount</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"ammount\\\" #ammount=\\\"ngModel\\\" [(ngModel)]=\\\"editedOutcome.ammount\\\"\\n                    placeholder=\\\"Ammount in €\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Description</label>\\n                  <textarea rows=\\\"4\\\" cols=\\\"80\\\" class=\\\"form-control\\\" name=\\\"description\\\" #description=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"editedOutcome.description\\\" placeholder=\\\"Give a description about the outcome\\\" required></textarea>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-md-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!editOutcomeForm.valid\\\">Update</button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ContentService } from '../core/content.service';\nimport { Outcome } from '../core/outcome';\n\n@Component({\n  selector: 'app-edit-outcome',\n  templateUrl: './edit-outcome.component.html',\n  styleUrls: ['./edit-outcome.component.css']\n})\nexport class EditOutcomeComponent implements OnInit {\n\n  public editedOutcome: Outcome = new Outcome();\n  public outcomeID: string;\n  private outcomeReference: AngularFireObject<any>;\n\n  ngOnInit() { }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private afDb: AngularFireDatabase,\n    private contentService: ContentService\n  ) {\n    this.getOutcome();\n  }\n\n  getOutcome(): void {\n    this.outcomeID = this.route.snapshot.paramMap.get('key');\n    this.outcomeReference = this.afDb.object('outcomes/' + this.outcomeID);\n    this.outcomeReference.snapshotChanges().subscribe(action => {\n      this.editedOutcome = action.payload.val() as Outcome;\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.oid !== null) {\n      this.contentService.updateOutcome(form.value);\n    }\n    this.router.navigate(['/outcomes']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/outcomes']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtcHJvZHVjdGlvbi9lZGl0LXByb2R1Y3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\">Edit Production</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #editProductionForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(editProductionForm)\\\">\\n            <input type=\\\"hidden\\\" name=\\\"pid\\\" #pid=\\\"ngModel\\\" [(ngModel)]=\\\"productionID\\\">\\n            <input type=\\\"hidden\\\" name=\\\"farmerid\\\" #farmerid=\\\"ngModel\\\" [(ngModel)]=\\\"editedProduction.farmerid\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" [(ngModel)]=\\\"editedProduction.title\\\"\\n                    placeholder=\\\"Title\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Date</label>\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"registrationDate\\\" #registrationDate=\\\"ngModel\\\" [ngModel]=\\\"editedProduction.registrationDate | date:'yyyy-MM-dd'\\\"\\n                    placeholder=\\\"Date\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Farm</label>\\n                  <select class=\\\"form-control\\\" name=\\\"farmid\\\" #farmid=\\\"ngModel\\\" [(ngModel)]=\\\"editedProduction.farmid\\\"\\n                    required>\\n                    <option disabled value=\\\"\\\">Select farm</option>\\n                    <option *ngFor=\\\"let farm of farmsList;\\\" [value]=\\\"farm.fid\\\">{{farm.title}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Units</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"units\\\" #units=\\\"ngModel\\\" [(ngModel)]=\\\"editedProduction.units\\\"\\n                    placeholder=\\\"Units\\\" required>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Weight in kg</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"ammountWeight\\\" #ammountWeight=\\\"ngModel\\\" [(ngModel)]=\\\"editedProduction.ammountWeight\\\"\\n                    placeholder=\\\"Weight in kg\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Description</label>\\n                  <textarea rows=\\\"4\\\" cols=\\\"80\\\" class=\\\"form-control\\\" name=\\\"description\\\" #description=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"editedProduction.description\\\" placeholder=\\\"Give a description about the production\\\"\\n                    required></textarea>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-md-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!editProductionForm.valid\\\">Update</button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport * as firebase from 'firebase/app';\nimport { ContentService } from '../core/content.service';\nimport { Production } from '../core/production';\nimport { Farm } from '../core/farm';\n\n@Component({\n  selector: 'app-edit-production',\n  templateUrl: './edit-production.component.html',\n  styleUrls: ['./edit-production.component.css']\n})\nexport class EditProductionComponent implements OnInit {\n\n  public editedProduction: Production = new Production();\n  public productionID: string;\n  private productionReference: AngularFireObject<any>;\n  public farmerID: string;\n  public farmsList: Farm[];\n\n  ngOnInit() { }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private afDb: AngularFireDatabase,\n    private contentService: ContentService\n  ) {\n    this.farmerID = firebase.auth().currentUser.uid;\n    this.productionID = this.route.snapshot.paramMap.get('key');\n    this.getProduction();\n    this.getFarms();\n  }\n\n  getProduction(): void {\n    this.productionReference = this.afDb.object('production/' + this.productionID);\n    this.productionReference.snapshotChanges().subscribe(action => {\n      this.editedProduction = action.payload.val() as Production;\n    });\n  }\n\n  getFarms() {\n    this.contentService.getFarmsData().snapshotChanges().subscribe(item => {\n      this.farmsList = [];\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['fid'] = element.key;\n        if (this.farmerID === (y as Farm).farmerid) {\n          this.farmsList.push(y as Farm);\n        }\n      });\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.pid !== null) {\n      this.contentService.updateProduction(form.value);\n    }\n    this.router.navigate(['/production']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/production']);\n  }\n}\n","module.exports = \".map-panel{\\r\\n    padding: 0px;\\r\\n}\\r\\n.map{\\r\\n    height: 25rem;\\r\\n}\\r\\n.content{\\r\\n    white-space: nowrap;\\r\\n    width: 40rem;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    margin-top: 1rem !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmFybWVyLWRhc2hib2FyZC9mYXJtZXItZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCO0FBQ0Q7SUFDSSxjQUFjO0NBQ2pCO0FBQ0Q7SUFDSSxvQkFBb0I7SUFDcEIsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQix3QkFBd0I7SUFDeEIsNEJBQTRCO0NBQy9CIiwiZmlsZSI6InNyYy9hcHAvZmFybWVyLWRhc2hib2FyZC9mYXJtZXItZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFwLXBhbmVse1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG59XHJcbi5tYXB7XHJcbiAgICBoZWlnaHQ6IDI1cmVtO1xyXG59XHJcbi5jb250ZW50e1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIHdpZHRoOiA0MHJlbTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIG1hcmdpbi10b3A6IDFyZW0gIWltcG9ydGFudDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"panel-header panel-header-lg\\\">\\n  <canvas baseChart id=\\\"mainChart\\\" [datasets]=\\\"mainChartData\\\" [labels]=\\\"mainChartLabels\\\" [colors]=\\\"mainChartColors\\\"\\n    [options]=\\\"mainChartOptions\\\" [chartType]=\\\"mainChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-md-4\\\">\\n      <div class=\\\"card card-chart\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"card-category\\\">General</h5>\\n          <h4 class=\\\"card-title\\\">Financial Measurements</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"chart-area\\\">\\n            <canvas baseChart id=\\\"measuresChart\\\" [datasets]=\\\"measuresChartData\\\" [labels]=\\\"measuresChartLabels\\\" [colors]=\\\"measuresChartColors\\\"\\n              [options]=\\\"measuresChartOptions\\\" [chartType]=\\\"measuresChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n              (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"stats\\\">\\n            <i class=\\\"now-ui-icons ui-2_chat-round\\\"></i> General incomes vs outcomes.\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-4 col-md-4\\\">\\n      <div class=\\\"card card-chart\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"card-category\\\">{{this.contentService.tempYear}}</h5>\\n          <h4 class=\\\"card-title\\\">Incomes</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"chart-area\\\">\\n            <canvas baseChart id=\\\"incomesChart\\\" [datasets]=\\\"incomesChartData\\\" [labels]=\\\"incomesChartLabels\\\" [colors]=\\\"incomesChartColors\\\"\\n              [options]=\\\"incomesChartOptions\\\" [chartType]=\\\"incomesChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n              (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"stats\\\">\\n            <i class=\\\"now-ui-icons ui-2_chat-round\\\"></i> Monthly incomes in €.\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-4 col-md-4\\\">\\n      <div class=\\\"card card-chart\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"card-category\\\">{{this.contentService.tempYear}}</h5>\\n          <h4 class=\\\"card-title\\\">Outcomes</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"chart-area\\\">\\n            <canvas baseChart id=\\\"outcomesChart\\\" [datasets]=\\\"outcomesChartData\\\" [labels]=\\\"outcomesChartLabels\\\" [colors]=\\\"outcomesChartColors\\\"\\n              [options]=\\\"outcomesChartOptions\\\" [chartType]=\\\"outcomesChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n              (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"stats\\\">\\n            <i class=\\\"now-ui-icons ui-2_chat-round\\\"></i> Monthly outcomes in €.\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"map-panel\\\">\\n          <div id=\\\"map\\\" class=\\\"map\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card  card-tasks\\\">\\n        <div class=\\\"card-header \\\">\\n          <h4 class=\\\"card-title\\\">Tips</h4>\\n        </div>\\n        <div class=\\\"card-body \\\">\\n          <div class=\\\"table-full-width table-responsive-sm\\\">\\n            <table class=\\\"table\\\">\\n              <tbody>\\n                <tr *ngFor=\\\"let row of tipsList; let i = index;\\\">\\n                  <td class=\\\"text-left\\\">{{row.title}}</td>\\n                  <td class=\\\"text-left\\\">\\n                    <p class=\\\"content\\\">{{row.content}}</p>\\n                  </td>\\n                  <td>{{row.registrationDate | date}}</td>\\n                  <td class=\\\"td-actions text-right\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-neutral\\\" data-original-title=\\\"Remove\\\" (click)=\\\"readTip(row)\\\">Read</button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div *ngIf=\\\"tipsCounter>4\\\" class=\\\"row justify-content-md-center\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-lg btn-block btn-neutral\\\" (click)=\\\"readAllTips()\\\">Read More</button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer \\\">\\n          <hr>\\n          <div class=\\\"stats\\\">\\n            <i class=\\\"now-ui-icons business_bulb-63\\\"></i> <a routerLink=\\\"/consultants\\\">Contact now with Consultants</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContentService } from '../core/content.service';\nimport { Production } from '../core/production';\nimport { Income } from '../core/income';\nimport { Outcome } from '../core/outcome';\nimport { Farm } from '../core/farm';\nimport { Tip } from '../core/tip';\nimport * as firebase from 'firebase/app';\n\ndeclare var google: any;\n\n@Component({\n  selector: 'app-farmer-dashboard',\n  templateUrl: './farmer-dashboard.component.html',\n  styleUrls: ['./farmer-dashboard.component.css']\n})\nexport class FarmerDashboardComponent implements OnInit {\n\n  public gradientStroke;\n  public chartColor;\n  public canvas: any;\n  public ctx;\n  public gradientFill;\n\n  public mainChartType;\n  public mainChartData: Array<any>;\n  public mainChartOptions: any;\n  public mainChartLabels: Array<any>;\n  public mainChartColors: Array<any>\n\n  public measuresChartType;\n  public measuresChartData: Array<any>;\n  public measuresChartOptions: any;\n  public measuresChartLabels: Array<any>;\n  public measuresChartColors: Array<any>\n\n  public incomesChartType;\n  public incomesChartData: Array<any>;\n  public incomesChartOptions: any;\n  public incomesChartLabels: Array<any>;\n  public incomesChartColors: Array<any>\n\n  public outcomesChartType;\n  public outcomesChartData: Array<any>;\n  public outcomesChartOptions: any;\n  public outcomesChartLabels: Array<any>;\n  public outcomesChartColors: Array<any>\n\n  private farmerID: string;\n  private measuresData = [0, 0];\n\n  public tipsCounter = 0;\n  public tipsList: Tip[];\n  public map;\n\n  public chartClicked(e: any): void {\n    console.log(e);\n  }\n\n  public chartHovered(e: any): void {\n    console.log(e);\n  }\n  public hexToRGB(hex, alpha) {\n    const r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n      return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n    } else {\n      return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n    }\n  }\n\n  constructor(\n    private router: Router,\n    private contentService: ContentService\n  ) {\n    this.farmerID = firebase.auth().currentUser.uid;\n\n    this.contentService.calledMethod.subscribe(() => {\n      this.initializeMainChart();\n      this.initializeMeasuresChart();\n      this.initializeIncomesChart();\n      this.initializeOutcomesChart();\n      this.getFarmsData();\n    });\n  }\n\n  initializeMainChart() {\n    this.mainChartData = [{\n      label: 'Production Kg',\n      pointBorderWidth: 1,\n      pointHoverRadius: 7,\n      pointHoverBorderWidth: 2,\n      pointRadius: 5,\n      fill: true,\n      borderWidth: 2,\n      data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    }];\n\n    this.contentService.getProductionData().snapshotChanges().subscribe(item => {\n      const data: any[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      let index = 0;\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['pid'] = element.key;\n        index++;\n        if (this.farmerID === (y as Production).farmerid) {\n          for (let i = 0; i < 12; i++) {\n            const rDate = new Date((y as Production).registrationDate);\n            const date = String(rDate.getMonth() + 1) + '/' + String(rDate.getFullYear());\n            if (date === (i + 1) + '/' + this.contentService.tempYear) {\n              data[i] = data[i] + (y as Production).ammountWeight;\n            }\n          }\n        }\n        if (index === item.length) {\n          this.mainChartData = [];\n          this.mainChartData.push({\n            data: data\n          });\n        }\n      });\n    });\n  }\n\n  initializeMeasuresChart() {\n    this.canvas = document.getElementById('measuresChart');\n    this.measuresChartLabels = ['Incomes', 'Outcomes'];\n\n    this.measuresChartData = [\n      {\n        borderWidth: 5,\n        data: this.measuresData\n      }\n    ];\n    this.measuresChartType = 'pie';\n  }\n\n  initializeIncomesChart() {\n    this.incomesChartData = [\n      {\n        label: 'Incomes €',\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        borderWidth: 2,\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }\n    ];\n\n    this.contentService.getIncomesData().snapshotChanges().subscribe(item => {\n      const data: any[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      let index = 0;\n      let totals = 0;\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['iid'] = element.key;\n        index++;\n        if (this.farmerID === (y as Income).farmerid) {\n          for (let i = 0; i < 12; i++) {\n            const rDate = new Date((y as Income).registrationDate);\n            const date = String(rDate.getMonth() + 1) + '/' + String(rDate.getFullYear());\n            if (date === (i + 1) + '/' + this.contentService.tempYear) {\n              data[i] = data[i] + (y as Income).ammount;\n              totals += data[i];\n            }\n          }\n        }\n        if (index === item.length) {\n          this.incomesChartData = [];\n          this.incomesChartData.push({\n            data: data\n          });\n          this.measuresData[0] = totals;\n          this.measuresChartData.push({ data: this.measuresData });\n          this.initializeMeasuresChart();\n        }\n      });\n    });\n  }\n\n  initializeOutcomesChart() {\n    this.outcomesChartData = [\n      {\n        label: 'Outcomes €',\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        borderWidth: 1,\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }\n    ];\n    this.contentService.getOutcomesData().snapshotChanges().subscribe(item => {\n      const data: any[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      let index = 0;\n      let totals = 0;\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['oid'] = element.key;\n        index++;\n        if (this.farmerID === (y as Outcome).farmerid) {\n          for (let i = 0; i < 12; i++) {\n            const rDate = new Date((y as Outcome).registrationDate);\n            const date = String(rDate.getMonth() + 1) + '/' + String(rDate.getFullYear());\n            if (date === (i + 1) + '/' + this.contentService.tempYear) {\n              data[i] = data[i] + (y as Outcome).ammount;\n              totals += data[i];\n            }\n          }\n        }\n        if (index === item.length) {\n          this.outcomesChartData = [];\n          this.outcomesChartData.push({\n            data: data\n          });\n          this.measuresData[1] = totals;\n          this.measuresChartData.push({ data: this.measuresData });\n          this.initializeMeasuresChart();\n        }\n      });\n    });\n  }\n\n  initMap() {\n    this.map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 8,\n      center: new google.maps.LatLng(35.3900078, 25.0834658),\n      scrollwheel: false,\n      mapTypeControl: false,\n      streetViewControl: false\n    });\n  }\n\n  getFarmsData() {\n    this.contentService.getFarmsDataId(this.farmerID).snapshotChanges().subscribe(item => {\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        let productionUnits = 0;\n        let productionAmmount = 0;\n        let marker;\n        let infowindow;\n        y['fid'] = element.key;\n\n        firebase.database().ref('production').orderByChild('farmid').equalTo((y as Farm).fid).once('value', item2 => {\n          item2.forEach(element2 => {\n            const p = element2.toJSON();\n            p['pid'] = element2.key;\n            productionUnits = productionUnits + (p as Production).units;\n            productionAmmount = productionAmmount + (p as Production).ammountWeight;\n          });\n        });\n\n        infowindow = new google.maps.InfoWindow({\n          content: '<b>Title:</b> ' + (y as Farm).title +\n            '<br>' + '<b>Soil:</b> ' + (y as Farm).soil +\n            '<br>' + '<b>Total Units:</b> ' + productionUnits + ' Units' +\n            '<br>' + '<b>Total Production:</b> ' + productionAmmount + ' kg'\n        });\n        marker = new google.maps.Marker({\n          position: new google.maps.LatLng((y as Farm).latitude, (y as Farm).longitude)\n        });\n        marker.addListener('click', function () {\n          infowindow.open(this.map, marker);\n        });\n        marker.setMap(this.map);\n      });\n    });\n  }\n\n  ngOnInit() {\n    this.initializeMainChart();\n    this.initializeMainChartStyle();\n\n    this.initializeMeasuresChart();\n\n    this.initializeIncomesChart();\n    this.initializeIncomesChartStyle();\n\n    this.initializeOutcomesChart();\n    this.initializeOutcomesChartStyle();\n\n    this.getTips();\n    this.initMap();\n    this.getFarmsData();\n  }\n\n  getTips() {\n    this.contentService.getTipsLimitedData().snapshotChanges().subscribe(item => {\n      this.tipsList = [];\n      this.tipsCounter = 0;\n      let counter = 0;\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['tid'] = element.key;\n        this.tipsList.push(y as Tip);\n        this.tipsCounter++;\n        counter++;\n        if (counter === item.length) {\n          this.tipsList.reverse();\n        }\n      });\n    });\n  }\n\n  readTip(tip: Tip) {\n    this.router.navigate(['/tip/' + tip.tid]);\n  }\n\n  readAllTips() {\n    this.router.navigate(['/tips/']);\n  }\n\n  initializeMainChartStyle() {\n    this.chartColor = '#f96332';\n    this.canvas = document.getElementById('mainChart');\n    this.ctx = this.canvas.getContext('2d');\n    this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n    this.gradientStroke.addColorStop(0, '#80b6f4');\n    this.gradientStroke.addColorStop(1, this.chartColor);\n    this.gradientFill = this.ctx.createLinearGradient(0, 200, 0, 50);\n    this.gradientFill.addColorStop(0, 'rgba(128, 182, 244, 0)');\n    this.gradientFill.addColorStop(1, '#f96332');\n\n    this.mainChartColors = [\n      {\n        backgroundColor: this.gradientFill,\n        borderColor: this.chartColor,\n        pointBorderColor: this.chartColor,\n        pointBackgroundColor: '#2c2c2c',\n        pointHoverBackgroundColor: '#2c2c2c',\n        pointHoverBorderColor: this.chartColor,\n      }\n    ];\n    this.mainChartLabels = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    this.mainChartOptions = {\n      layout: { padding: { left: 20, right: 20, top: 0, bottom: 0 } },\n      maintainAspectRatio: false,\n      tooltips: {\n        backgroundColor: '#fff', titleFontColor: '#333', bodyFontColor: '#666', bodySpacing: 4, xPadding: 12,\n        mode: 'nearest', intersect: 0, position: 'nearest'\n      },\n      legend: {\n        position: 'bottom',\n        fillStyle: '#FFF',\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            fontColor: 'rgba(255,255,255,0.4)',\n            fontStyle: 'bold',\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            padding: 10\n          },\n          gridLines: {\n            drawTicks: true,\n            drawBorder: false,\n            display: true,\n            color: 'rgba(255,255,255,0.1)',\n            zeroLineColor: 'transparent'\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            zeroLineColor: 'transparent',\n            display: false,\n\n          },\n          ticks: {\n            padding: 10,\n            fontColor: 'rgba(255,255,255,0.4)',\n            fontStyle: 'bold'\n          }\n        }]\n      }\n    };\n\n    this.mainChartType = 'line';\n  }\n\n  initializeIncomesChartStyle() {\n    this.canvas = document.getElementById('incomesChart');\n    this.ctx = this.canvas.getContext('2d');\n\n    this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n    this.gradientStroke.addColorStop(0, '#18ce0f');\n    this.gradientStroke.addColorStop(1, this.chartColor);\n\n    this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n    this.gradientFill.addColorStop(0, 'rgba(128, 182, 244, 0)');\n    this.gradientFill.addColorStop(1, this.hexToRGB('#18ce0f', 0.4));\n    this.incomesChartOptions = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        bodySpacing: 4,\n        mode: 'nearest',\n        intersect: 0,\n        position: 'nearest',\n        xPadding: 10,\n        yPadding: 10,\n        caretPadding: 10\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          gridLines: {\n            zeroLineColor: 'transparent',\n            drawBorder: false\n          }\n        }],\n        xAxes: [{\n          display: 0,\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            zeroLineColor: 'transparent',\n            drawTicks: false,\n            display: false,\n            drawBorder: false\n          }\n        }]\n      },\n      layout: {\n        padding: {\n          left: 0,\n          right: 0,\n          top: 15,\n          bottom: 15\n        }\n      }\n    };\n\n    this.incomesChartColors = [\n      {\n        borderColor: '#18ce0f',\n        pointBorderColor: '#FFF',\n        pointBackgroundColor: '#18ce0f',\n        backgroundColor: this.gradientFill\n      }\n    ];\n    this.incomesChartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    this.incomesChartType = 'line';\n  }\n\n  initializeOutcomesChartStyle() {\n    this.canvas = document.getElementById('outcomesChart');\n    this.ctx = this.canvas.getContext('2d');\n    this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n    this.gradientFill.addColorStop(0, 'rgba(128, 182, 244, 0)');\n    this.gradientFill.addColorStop(1, this.hexToRGB('#f96332', 0.6));\n\n    this.outcomesChartColors = [\n      {\n        backgroundColor: this.gradientFill,\n        borderColor: '#f96332',\n        pointBorderColor: '#FFF',\n        pointBackgroundColor: '#f96332',\n      }\n    ];\n\n    this.outcomesChartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'];\n    this.outcomesChartOptions = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        bodySpacing: 4,\n        mode: 'nearest',\n        intersect: 0,\n        position: 'nearest',\n        xPadding: 10,\n        yPadding: 10,\n        caretPadding: 10\n      },\n      responsive: 1,\n      scales: {\n        yAxes: [{\n          gridLines: {\n            zeroLineColor: 'transparent',\n            drawBorder: false\n          }\n        }],\n        xAxes: [{\n          display: 0,\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            zeroLineColor: 'transparent',\n            drawTicks: false,\n            display: false,\n            drawBorder: false\n          }\n        }]\n      },\n      layout: {\n        padding: {\n          left: 0,\n          right: 0,\n          top: 15,\n          bottom: 15\n        }\n      }\n    }\n\n    this.outcomesChartType = 'bar';\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zhcm1zL2Zhcm1zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\"> My Farms</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"table-responsive-sm\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"text-primary\\\">\\n                <th *ngFor=\\\"let cell of tableData.headerRow\\\">{{cell}}</th>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let row of farmsList; let i = index;\\\">\\n                  <td>{{i + 1}}</td>\\n                  <td>{{row.title}}</td>\\n                  <td>{{row.region}}</td>\\n                  <td>{{row.size | number}} m<sup>2</sup></td>\\n                  <td>{{row.soil}}</td>\\n                  <td>{{row.description}}</td>\\n                  <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-dark btn-icon\\\" (click)=\\\"editFarm(row)\\\"><i class=\\\"fa fa-pencil-alt\\\"></i></button></td>\\n                  <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-danger btn-icon\\\" (click)=\\\"deleteFarm(row)\\\"><i\\n                        class=\\\"fa fa-trash\\\"></i></button></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"addNewFarm()\\\"><i class=\\\"fa fa-plus\\\"></i> Add New Farm</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport { ContentService } from '../core/content.service';\nimport { Farm } from '../core/farm';\n\ndeclare interface TableData {\n  headerRow: string[];\n}\n\n@Component({\n  selector: 'app-farms',\n  templateUrl: './farms.component.html',\n  styleUrls: ['./farms.component.css']\n})\nexport class FarmsComponent implements OnInit {\n\n  public tableData: TableData;\n  public farmerID: string;\n  public farmsList: Farm[];\n\n  constructor(\n    private router: Router,\n    private contentService: ContentService\n  ) {\n    this.farmerID = firebase.auth().currentUser.uid;\n  }\n\n  ngOnInit() {\n    this.tableData = {\n      headerRow: ['ID', 'Title', 'Region', 'Size', 'Soil', 'Description']\n    };\n    this.contentService.getFarmsData().snapshotChanges().subscribe(item => {\n      this.farmsList = [];\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['fid'] = element.key;\n        if (this.farmerID === (y as Farm).farmerid) {\n          this.farmsList.push(y as Farm);\n        }\n      });\n    });\n  }\n\n  editFarm(farm: Farm) {\n    this.router.navigate(['/edit-farm/' + farm.fid]);\n  }\n\n  deleteFarm(farm: Farm) {\n    this.contentService.deleteFarm(farm.fid);\n  }\n\n  addNewFarm() {\n    this.router.navigate(['/new-farm']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luY29tZXMvaW5jb21lcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\"> My Incomes</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"table-responsive-sm\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"text-primary\\\">\\n                <th *ngFor=\\\"let cell of tableData.headerRow\\\">{{cell}}</th>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let row of incomesList; let i = index;\\\">\\n                  <td>{{i+1}}</td>\\n                  <td>{{row.title}}</td>\\n                  <td>{{row.ammount | number}} €</td>\\n                  <td>{{row.registrationDate | date}}</td>\\n                  <td>{{row.description}}</td>\\n                  <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-dark btn-icon\\\" (click)=\\\"editIncome(row)\\\"><i\\n                        class=\\\"fa fa-pencil-alt\\\"></i></button></td>\\n                  <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-danger btn-icon\\\" (click)=\\\"deleteIncome(row)\\\"><i\\n                        class=\\\"fa fa-trash\\\"></i></button></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"addNewIncome()\\\"><i class=\\\"fa fa-plus\\\"></i> Add New Income</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport { ContentService } from '../core/content.service';\nimport { Income } from '../core/income';\n\ndeclare interface TableData {\n  headerRow: string[];\n}\n\n@Component({\n  selector: 'app-incomes',\n  templateUrl: './incomes.component.html',\n  styleUrls: ['./incomes.component.css']\n})\nexport class IncomesComponent implements OnInit {\n\n  public tableData: TableData;\n  public farmerID: string;\n  public incomesList: Income[];\n\n  constructor(\n    private router: Router,\n    private contentService: ContentService\n  ) {\n    this.farmerID = firebase.auth().currentUser.uid;\n  }\n\n  ngOnInit() {\n    this.tableData = {\n      headerRow: ['ID', 'Title', 'Ammount', 'Date', 'Description']\n    };\n    this.contentService.getIncomesData().snapshotChanges().subscribe(item => {\n      this.incomesList = [];\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['iid'] = element.key;\n        if (this.farmerID === (y as Income).farmerid) {\n          this.incomesList.push(y as Income);\n        }\n      });\n    });\n  }\n\n  editIncome(income: Income) {\n    this.router.navigate(['/edit-income/' + income.iid]);\n  }\n\n  deleteIncome(income: Income) {\n    this.contentService.deleteIncome(income.iid);\n  }\n\n  addNewIncome() {\n    this.router.navigate(['/new-income']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FarmerLayoutRoutes } from './farmer-layout.routing';\nimport { ChartsModule } from 'ng2-charts';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FarmerDashboardComponent } from '../../farmer-dashboard/farmer-dashboard.component';\nimport { IncomesComponent } from '../../incomes/incomes.component';\nimport { OutcomesComponent } from '../../outcomes/outcomes.component';\nimport { ProductionComponent } from '../../production/production.component';\nimport { FarmsComponent } from '../../farms/farms.component';\nimport { NewFarmComponent } from '../../new-farm/new-farm.component';\nimport { EditFarmComponent } from '../../edit-farm/edit-farm.component';\nimport { NewIncomeComponent } from '../../new-income/new-income.component';\nimport { EditIncomeComponent } from '../../edit-income/edit-income.component';\nimport { NewOutcomeComponent } from '../../new-outcome/new-outcome.component';\nimport { EditOutcomeComponent } from '../../edit-outcome/edit-outcome.component';\nimport { NewProductionComponent } from '../../new-production/new-production.component';\nimport { EditProductionComponent } from '../../edit-production/edit-production.component';\nimport { TipsComponent } from '../../tips/tips.component';\nimport { TipComponent } from '../../tip/tip.component';\nimport { ConsultantsComponent } from '../../consultants/consultants.component';\n\n@NgModule({\n  declarations: [\n    FarmerDashboardComponent,\n    IncomesComponent,\n    OutcomesComponent,\n    ProductionComponent,\n    FarmsComponent,\n    EditFarmComponent,\n    NewFarmComponent,\n    NewIncomeComponent,\n    EditIncomeComponent,\n    NewOutcomeComponent,\n    EditOutcomeComponent,\n    NewProductionComponent,\n    EditProductionComponent,\n    TipsComponent,\n    TipComponent,\n    ConsultantsComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(FarmerLayoutRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    ChartsModule,\n    NgbModule,\n    ToastrModule.forRoot()\n  ]\n})\nexport class FarmerLayoutModule { }\n","import { Routes } from '@angular/router';\nimport { FarmerDashboardComponent } from '../../farmer-dashboard/farmer-dashboard.component';\nimport { IncomesComponent } from '../../incomes/incomes.component';\nimport { OutcomesComponent } from '../../outcomes/outcomes.component';\nimport { ProductionComponent } from '../../production/production.component';\nimport { FarmsComponent } from '../../farms/farms.component';\nimport { NewFarmComponent } from '../../new-farm/new-farm.component';\nimport { EditFarmComponent } from '../../edit-farm/edit-farm.component';\nimport { NewIncomeComponent } from '../../new-income/new-income.component';\nimport { NewOutcomeComponent } from '../../new-outcome/new-outcome.component';\nimport { NewProductionComponent } from '../../new-production/new-production.component';\nimport { EditIncomeComponent } from '../../edit-income/edit-income.component';\nimport { EditOutcomeComponent } from '../../edit-outcome/edit-outcome.component';\nimport { EditProductionComponent } from '../../edit-production/edit-production.component';\nimport { TipsComponent } from '../../tips/tips.component';\nimport { TipComponent } from '../../tip/tip.component';\nimport { ConsultantsComponent } from '../../consultants/consultants.component';\n\nexport const FarmerLayoutRoutes: Routes = [\n    { path: 'farmer-dashboard', component: FarmerDashboardComponent },\n    { path: 'incomes', component: IncomesComponent },\n    { path: 'outcomes', component: OutcomesComponent },\n    { path: 'production', component: ProductionComponent },\n    { path: 'farms', component: FarmsComponent },\n    { path: 'new-farm', component: NewFarmComponent },\n    { path: 'edit-farm/:key', component: EditFarmComponent },\n    { path: 'new-income', component: NewIncomeComponent },\n    { path: 'edit-income/:key', component: EditIncomeComponent },\n    { path: 'new-outcome', component: NewOutcomeComponent },\n    { path: 'edit-outcome/:key', component: EditOutcomeComponent },\n    { path: 'new-production', component: NewProductionComponent },\n    { path: 'edit-production/:key', component: EditProductionComponent },\n    { path: 'tips', component: TipsComponent },\n    { path: 'tip/:key', component: TipComponent },\n    { path: 'consultants', component: ConsultantsComponent }\n];\n","module.exports = \".map-panel{\\r\\n    padding: 0px;\\r\\n}\\r\\n.map{\\r\\n    height: 25rem;\\r\\n    border-radius: 0rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV3LWZhcm0vbmV3LWZhcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEI7QUFDRDtJQUNJLGNBQWM7SUFDZCxvQkFBb0I7Q0FDdkIiLCJmaWxlIjoic3JjL2FwcC9uZXctZmFybS9uZXctZmFybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcC1wYW5lbHtcclxuICAgIHBhZGRpbmc6IDBweDtcclxufVxyXG4ubWFwe1xyXG4gICAgaGVpZ2h0OiAyNXJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDByZW07XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\">New Farm</h5>\\n        </div>\\n        <div class=\\\"map-panel\\\">\\n          <div id=\\\"map\\\" class=\\\"map\\\"></div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #newFarmForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(newFarmForm)\\\">\\n            <input type=\\\"hidden\\\" name=\\\"farmerid\\\" #farmerid=\\\"ngModel\\\" [(ngModel)]=\\\"this.farmerID\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" ngModel placeholder=\\\"Title\\\"\\n                    required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Region</label>\\n                  <select class=\\\"form-control\\\" name=\\\"region\\\" #region=\\\"ngModel\\\" ngModel required>\\n                    <option disabled selected value=\\\"\\\">Select region</option>\\n                    <option *ngFor=\\\"let regionName of regionsList;\\\" [value]=\\\"regionName\\\">{{regionName}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Longitude</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"longitude\\\" #longitude=\\\"ngModel\\\" [(ngModel)]=\\\"this.longitudeT\\\"\\n                    placeholder=\\\"Longitude\\\" readonly required>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Latitude</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"latitude\\\" #latitude=\\\"ngModel\\\" [(ngModel)]=\\\"this.latitudeT\\\"\\n                    placeholder=\\\"Latitude\\\" readonly required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Size in m<sup>2</sup></label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"size\\\" #size=\\\"ngModel\\\" ngModel placeholder=\\\"Size\\\"\\n                    required>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Soil</label>\\n                  <select class=\\\"form-control\\\" name=\\\"soil\\\" #soil=\\\"ngModel\\\" ngModel required>\\n                    <option disabled selected value=\\\"\\\">Select soil type</option>\\n                    <option *ngFor=\\\"let soilTypes of soilTypesList;\\\" [value]=\\\"soilTypes\\\">{{soilTypes}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Description</label>\\n                  <textarea rows=\\\"4\\\" cols=\\\"80\\\" class=\\\"form-control\\\" name=\\\"description\\\" #description=\\\"ngModel\\\" ngModel\\n                    placeholder=\\\"Give a description about the farm\\\" required></textarea>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-md-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!newFarmForm.valid\\\">Add</button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport { ContentService } from '../core/content.service';\n\ndeclare var google: any;\n\n@Component({\n  selector: 'app-new-farm',\n  templateUrl: './new-farm.component.html',\n  styleUrls: ['./new-farm.component.css']\n})\nexport class NewFarmComponent implements OnInit {\n\n  public regionsList = ['Heraklion Crete', 'Chania Crete', 'Rehtimnon Crete', 'Lasithi Crete'];\n  public soilTypesList = ['Loam', 'Clay', 'Sand', 'Silt', 'Peat', 'Chalk'];\n  public farmerID: string;\n  public latitudeT;\n  public longitudeT;\n  private defaultCoordinates = new google.maps.LatLng(0, 0);\n\n  ngOnInit() {\n    this.initMap(this.defaultCoordinates);\n  }\n\n  constructor(\n    private router: Router,\n    private contentService: ContentService\n  ) {\n    this.latitudeT = 35.3900078;\n    this.longitudeT = 25.0834658;\n    this.defaultCoordinates = new google.maps.LatLng(this.latitudeT, this.longitudeT);\n    this.farmerID = firebase.auth().currentUser.uid;\n    this.contentService.getFarmStatistics();\n  }\n\n  onSubmit(form: NgForm) {\n    this.contentService.insertFarm(form.value);\n    this.router.navigate(['/farms']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/farms']);\n  }\n\n  initMap(coordinates) {\n    const map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 8,\n      center: coordinates,\n      scrollwheel: false,\n      mapTypeControl: false,\n      streetViewControl: false\n    });\n    const marker = new google.maps.Marker({ position: coordinates });\n    marker.setMap(map);\n\n    map.addListener('click', (event) => {\n      marker.setPosition(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));\n      map.panTo(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));\n      this.latitudeT = event.latLng.lat();\n      this.longitudeT = event.latLng.lng();\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1pbmNvbWUvbmV3LWluY29tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\">New Income</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #newIncomeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(newIncomeForm)\\\">\\n            <input type=\\\"hidden\\\" name=\\\"farmerid\\\" #farmerid=\\\"ngModel\\\" [(ngModel)]=\\\"this.farmerID\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" ngModel placeholder=\\\"Title\\\"\\n                    required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Date</label>\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"registrationDate\\\" #registrationDate=\\\"ngModel\\\" ngModel\\n                    placeholder=\\\"Date\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Ammount</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"ammount\\\" #ammount=\\\"ngModel\\\" ngModel placeholder=\\\"Ammount in €\\\"\\n                    required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Description</label>\\n                  <textarea rows=\\\"4\\\" cols=\\\"80\\\" class=\\\"form-control\\\" name=\\\"description\\\" #description=\\\"ngModel\\\" ngModel\\n                    placeholder=\\\"Give a description about the income\\\" required></textarea>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-md-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!newIncomeForm.valid\\\">Add</button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport { ContentService } from '../core/content.service';\n\n@Component({\n  selector: 'app-new-income',\n  templateUrl: './new-income.component.html',\n  styleUrls: ['./new-income.component.css']\n})\nexport class NewIncomeComponent implements OnInit {\n\n  public farmerID: string;\n\n  ngOnInit() { }\n\n  constructor(\n    private router: Router,\n    private contentService: ContentService\n  ) {\n    this.farmerID = firebase.auth().currentUser.uid;\n    this.contentService.getIncomeStatistics();\n  }\n\n  onSubmit(form: NgForm) {\n    this.contentService.insertIncome(form.value);\n    this.router.navigate(['/incomes']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/incomes']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1vdXRjb21lL25ldy1vdXRjb21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\">New Outcome</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #newOutcomeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(newOutcomeForm)\\\">\\n            <input type=\\\"hidden\\\" name=\\\"farmerid\\\" #farmerid=\\\"ngModel\\\" [(ngModel)]=\\\"this.farmerID\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" ngModel placeholder=\\\"Title\\\"\\n                    required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Date</label>\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"registrationDate\\\" #registrationDate=\\\"ngModel\\\" ngModel\\n                    placeholder=\\\"Date\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Ammount</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"ammount\\\" #ammount=\\\"ngModel\\\" ngModel placeholder=\\\"Ammount in €\\\"\\n                    required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Description</label>\\n                  <textarea rows=\\\"4\\\" cols=\\\"80\\\" class=\\\"form-control\\\" name=\\\"description\\\" #description=\\\"ngModel\\\" ngModel\\n                    placeholder=\\\"Give a description about the outcome\\\" required></textarea>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-md-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!newOutcomeForm.valid\\\">Add</button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport { ContentService } from '../core/content.service';\n\n@Component({\n  selector: 'app-new-outcome',\n  templateUrl: './new-outcome.component.html',\n  styleUrls: ['./new-outcome.component.css']\n})\nexport class NewOutcomeComponent implements OnInit {\n\n  public farmerID: string;\n\n  ngOnInit() { }\n\n  constructor(\n    private router: Router,\n    private contentService: ContentService\n  ) {\n    this.farmerID = firebase.auth().currentUser.uid;\n    this.contentService.getOutcomeStatistics();\n  }\n\n  onSubmit(form: NgForm) {\n    this.contentService.insertOutcome(form.value);\n    this.router.navigate(['/outcomes']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/outcomes']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1wcm9kdWN0aW9uL25ldy1wcm9kdWN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\">New Production</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #newProductionForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(newProductionForm)\\\">\\n            <input type=\\\"hidden\\\" name=\\\"farmerid\\\" #farmerid=\\\"ngModel\\\" [(ngModel)]=\\\"this.farmerID\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" ngModel placeholder=\\\"Title\\\"\\n                    required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Date</label>\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"registrationDate\\\" #registrationDate=\\\"ngModel\\\" ngModel\\n                    placeholder=\\\"Date\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Farm</label>\\n                  <select class=\\\"form-control\\\" name=\\\"farmid\\\" #farmid=\\\"ngModel\\\" ngModel required>\\n                    <option disabled selected value=\\\"\\\">Select farm</option>\\n                    <option *ngFor=\\\"let farm of farmsList;\\\" [value]=\\\"farm.fid\\\">{{farm.title}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Units</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"units\\\" #units=\\\"ngModel\\\" ngModel placeholder=\\\"Units\\\"\\n                    required>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Weight in kg</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"ammountWeight\\\" #ammountWeight=\\\"ngModel\\\" ngModel\\n                    placeholder=\\\"Weight in kg\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Description</label>\\n                  <textarea rows=\\\"4\\\" cols=\\\"80\\\" class=\\\"form-control\\\" name=\\\"description\\\" #description=\\\"ngModel\\\" ngModel\\n                    placeholder=\\\"Give a description about the production\\\" required></textarea>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-md-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!newProductionForm.valid\\\">Add</button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport { ContentService } from '../core/content.service';\nimport { Farm } from '../core/farm';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\n@Component({\n  selector: 'app-new-production',\n  templateUrl: './new-production.component.html',\n  styleUrls: ['./new-production.component.css']\n})\nexport class NewProductionComponent implements OnInit {\n\n  public farmerID: string;\n  public farmsList: Farm[];\n  faList: AngularFireList<any>;\n\n  ngOnInit() { }\n\n  constructor(\n    private router: Router,\n    private afDb: AngularFireDatabase,\n    private contentService: ContentService\n  ) {\n    this.farmerID = firebase.auth().currentUser.uid;\n    this.getFarms();\n    this.contentService.getProductionStatistics();\n  }\n\n  getFarms() {\n    this.faList = this.afDb.list('farms', ref => ref.orderByChild('farmerid').equalTo(this.farmerID));\n    this.faList.snapshotChanges().subscribe(item => {\n      this.farmsList = [];\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['fid'] = element.key;\n        this.farmsList.push(y as Farm);\n      });\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    this.contentService.insertProduction(form.value);\n    this.router.navigate(['/production']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/production']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL291dGNvbWVzL291dGNvbWVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\"> My Outcomes</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"table-responsive-sm\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"text-primary\\\">\\n                <th *ngFor=\\\"let cell of tableData.headerRow\\\">{{cell}}</th>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let row of outcomesList; let i = index;\\\">\\n                  <td>{{i+1}}</td>\\n                  <td>{{row.title}}</td>\\n                  <td>{{row.ammount | number}} €</td>\\n                  <td>{{row.registrationDate | date}}</td>\\n                  <td>{{row.description}}</td>\\n                  <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-dark btn-icon\\\" (click)=\\\"editOutcome(row)\\\"><i\\n                        class=\\\"fa fa-pencil-alt\\\"></i></button></td>\\n                  <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-danger btn-icon\\\" (click)=\\\"deleteOutcome(row)\\\"><i\\n                        class=\\\"fa fa-trash\\\"></i></button></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"addNewOutcome()\\\"><i class=\\\"fa fa-plus\\\"></i> Add New Outcome</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport { ContentService } from '../core/content.service';\nimport { Outcome } from '../core/outcome';\n\ndeclare interface TableData {\n  headerRow: string[];\n}\n\n@Component({\n  selector: 'app-outcomes',\n  templateUrl: './outcomes.component.html',\n  styleUrls: ['./outcomes.component.css']\n})\nexport class OutcomesComponent implements OnInit {\n\n  public tableData: TableData;\n  public farmerID: string;\n  public outcomesList: Outcome[];\n\n  constructor(\n    private router: Router,\n    private contentService: ContentService\n  ) {\n    this.farmerID = firebase.auth().currentUser.uid;\n  }\n\n  ngOnInit() {\n    this.tableData = {\n      headerRow: ['ID', 'Title', 'Ammount', 'Date', 'Description']\n    };\n    this.contentService.getOutcomesData().snapshotChanges().subscribe(item => {\n      this.outcomesList = [];\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['oid'] = element.key;\n        if (this.farmerID === (y as Outcome).farmerid) {\n          this.outcomesList.push(y as Outcome);\n        }\n      });\n    });\n  }\n\n  editOutcome(outcome: Outcome) {\n    this.router.navigate(['/edit-outcome/' + outcome.oid]);\n  }\n\n  deleteOutcome(outcome: Outcome) {\n    this.contentService.deleteOutcome(outcome.oid);\n  }\n\n  addNewOutcome() {\n    this.router.navigate(['/new-outcome']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3Rpb24vcHJvZHVjdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\"> My Production</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"table-responsive-sm\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"text-primary\\\">\\n                <th *ngFor=\\\"let cell of tableData.headerRow\\\">{{cell}}</th>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let row of productionList; let i = index;\\\">\\n                  <td>{{i+1}}</td>\\n                  <td>{{row.title}}</td>\\n                  <td>{{row.ammountWeight | number}} kg</td>\\n                  <td>{{row.units | number}}</td>\\n                  <td>{{row.ammountWeight*estimatedPrice | number}} €</td>\\n                  <td>{{row.registrationDate | date}}</td>\\n                  <td>{{row.description}}</td>\\n                  <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-dark btn-icon\\\" (click)=\\\"editProduction(row)\\\"><i\\n                        class=\\\"fa fa-pencil-alt\\\"></i></button></td>\\n                  <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-danger btn-icon\\\" (click)=\\\"deleteProduction(row)\\\"><i\\n                        class=\\\"fa fa-trash\\\"></i></button></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"addNewProduction()\\\"><i class=\\\"fa fa-plus\\\"></i> Add New\\n        Production</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport { ContentService } from '../core/content.service';\nimport { Production } from '../core/production';\n\ndeclare interface TableData {\n  headerRow: string[];\n}\n\n@Component({\n  selector: 'app-production',\n  templateUrl: './production.component.html',\n  styleUrls: ['./production.component.css']\n})\nexport class ProductionComponent implements OnInit {\n\n  public tableData: TableData;\n  public farmerID: string;\n  public date: string;\n  public estimatedPrice = 3.80;\n  public productionList: Production[];\n\n  constructor(\n    private router: Router,\n    private contentService: ContentService\n  ) {\n    this.farmerID = firebase.auth().currentUser.uid;\n  }\n\n  ngOnInit() {\n    this.tableData = {\n      headerRow: ['ID', 'Title', 'Weight', 'Units', 'Est. Profit', 'Date', 'Description']\n    };\n    this.contentService.getProductionData().snapshotChanges().subscribe(item => {\n      this.productionList = [];\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['pid'] = element.key;\n        if (this.farmerID === (y as Production).farmerid) {\n          this.productionList.push(y as Production);\n          const tempDate = new Date((y as Production).registrationDate);\n          this.date = String(tempDate.getMonth() + 1) + '/' + String(tempDate.getFullYear());\n        }\n      });\n    });\n  }\n\n  editProduction(production: Production) {\n    this.router.navigate(['/edit-production/' + production.pid]);\n  }\n\n  deleteProduction(production: Production) {\n    this.contentService.deleteProduction(production.pid);\n  }\n\n  addNewProduction() {\n    this.router.navigate(['/new-production']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpcC90aXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"category\\\">{{currentTip.tag}}</h4>\\n          <h5 class=\\\"title\\\"> {{currentTip.title}}</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <p>{{currentTip.content}}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Tip } from '../core/tip';\n\n@Component({\n  selector: 'app-tip',\n  templateUrl: './tip.component.html',\n  styleUrls: ['./tip.component.css']\n})\nexport class TipComponent implements OnInit {\n\n  public currentTip: Tip = new Tip();\n  public tipID: string;\n  private tipReference: AngularFireObject<any>;\n\n  ngOnInit() { }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private afDb: AngularFireDatabase\n  ) {\n    this.getTip();\n  }\n\n  getTip(): void {\n    this.tipID = this.route.snapshot.paramMap.get('key');\n    this.tipReference = this.afDb.object('tips/' + this.tipID);\n    this.tipReference.snapshotChanges().subscribe(action => {\n      this.currentTip = action.payload.val() as Tip;\n    });\n  }\n\n  onBack() {\n    this.router.navigate(['/tips']);\n  }\n}\n","module.exports = \".content{\\r\\n    white-space: nowrap;\\r\\n    width: 40rem;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    margin-top: 1rem !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGlwcy90aXBzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQkFBb0I7SUFDcEIsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQix3QkFBd0I7SUFDeEIsNEJBQTRCO0NBQy9CIiwiZmlsZSI6InNyYy9hcHAvdGlwcy90aXBzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICB3aWR0aDogNDByZW07XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICBtYXJnaW4tdG9wOiAxcmVtICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\"> Tips</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"table-responsive-sm\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"text-primary\\\">\\n                <th *ngFor=\\\"let cell of tableData.headerRow\\\">{{cell}}</th>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let row of tipsList; let i = index;\\\">\\n                  <td>{{i+1}}</td>\\n                  <td>{{row.title}}</td>\\n                  <td>\\n                    <p class=\\\"content\\\">{{row.content}}</p>\\n                  </td>\\n                  <td>{{row.tag}}</td>\\n                  <td>{{row.registrationDate | date}}</td>\\n                  <td class=\\\"text-right\\\"><button class=\\\"btn btn-sm btn-info btn-icon\\\" (click)=\\\"readTip(row)\\\"><i class=\\\"fa fa-search\\\"></i></button></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContentService } from '../core/content.service';\nimport { Tip } from '../core/tip';\n\ndeclare interface TableData {\n  headerRow: string[];\n}\n\n@Component({\n  selector: 'app-tips',\n  templateUrl: './tips.component.html',\n  styleUrls: ['./tips.component.css']\n})\nexport class TipsComponent implements OnInit {\n\n  public tableData: TableData;\n  public tipsList: Tip[];\n\n  constructor(\n    private router: Router,\n    private contentService: ContentService\n  ) { }\n\n  ngOnInit() {\n    this.tableData = {\n      headerRow: ['ID', 'Title', 'Content', 'Tag', 'Date']\n    };\n    this.contentService.getTipsData().snapshotChanges().subscribe(item => {\n      this.tipsList = [];\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['tid'] = element.key;\n        this.tipsList.push(y as Tip);\n      });\n    });\n  }\n\n  readTip(tip: Tip) {\n    this.router.navigate(['/tip/' + tip.tid]);\n  }\n}\n"],"sourceRoot":""}